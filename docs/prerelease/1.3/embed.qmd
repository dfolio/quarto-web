---
title: Embedding Notebook Output
---

{{< include _pre-release-feature.qmd >}}

## Overview

In Quarto 1.3 you can include the output of an external Jupyter notebook in a Quarto document with the `embed` shortcode. To embed a notebook cell, provide the path to a Jupyter Notebook and a cell identifier. For example, using this notebook:

![](images/notebook-simple.png)

You could embed the first code cell using the following shortcode:

``` markdown
{{< embed plots.ipynb#plot-dot >}}
```

Which will embed the plot as follows:

{{< embed plots.ipynb#plot-dot >}}

A link to the source notebook is automatically provided beneath the plot so that users can explore the notebook used to produce the plot. 

Beyond this basic usage, you can also:

* Specify cells in multiple ways, see [Specifying Cells](#specifying-cells). 
* Include the cell code along with the output by adding an `echo` option to the shortcode, see [Embedding Code](#embedding-code). 
* Control the output using code cell options in the source Notebook, including things like figure captions, figure layout, and code display, see [Code Cell Options](#code-cell-options).
* Customize or exclude the link to the the source  notebooks, see [Links to Source Notebooks](#linked-source-notebooks).

## Specifying Cells {#specifying-cells}

The `embed` shortcode specifies target notebooks using an input relative path followed by a cell identifier (e.g. `plots.ipynb#plot-dot`). If the cell identifier is omitted, all of the cells in the notebook will be embedded in the document.

The cell identifier in an embed is used to locate the proper cell using the following heuristics

1.  **Cell `id`**\
    First, the cell metadata will be checked for a matching `id` , if found, this cell will be embedded. ([Cell IDs](https://jupyter.org/enhancement-proposals/62-cell-id/cell-id.html) are a newer feature of Jupyter Notebooks that are not yet well supported in Jupyter front ends, but this is checked for future compatibility as ids become more used).
2.  **Label**\
    If no cell with an `id` is found, Quarto will use a cell that has a `label` in the code metadata which matches the embed's id.
3.  **Tags**\
    If no cell has been found, Quarto will use a cell or cell(s) which has a tag which matches the embed's id.

### Cell Tags

For example, to embed the output of a cell that you have given the tag `plot-line` within Jupyter Lab:

![](images/notebook-tag.png){.border}

You would use the following embed:

``` markdown
{{< embed plots.ipynb#plot-line >}}
```

Which results in the following output:

{{< embed plots.ipynb#plot-line >}}

## Embedding Code {#embedding-code}

In addition to embedding the output of a code cell, you may include the code from the cell by using the `echo=true` option. For example, the same embed with the echo option like:

``` markdown
{{< embed plots.ipynb#plot-dot echo=true >}}
```

This embeds both the code for the cell as well as the outputs of the code cell:

{{< embed plots.ipynb#plot-dot echo=true >}}

::: callout-note
Code custom customization options for the document in which these cells are embedded will also control these code cells (for example, `code-fold: true`{spellcheck="false"} will fold the cells by default).
:::

## Code Cell Options {#code-cell-options}
 
Content and code that is being embedded from Jupyter notebooks can also use code cell options like `fig-cap`, `layout-ncol`, to include additional options from the Notebook. For example, here we use several cell options in a notebook cell:

``` python
#| label: fig-fruit
#| fig-cap: Charts
#| fig-subcap: 
#|   - A distribution of the fruit that I eat each week
#|   - Another pie chart which shows a distribution of something
#| layout-ncol: 2

import matplotlib.pyplot as plt
x=[4,9,16,25,36]
fig = plt.figure(figsize =(5.5, 5.5))
plt.pie(x, labels=("Guavas", "Berries","Mangoes","Apples", "Avocado"),
colors = ( "#a86544", "#eb5b13", "#ebc713", "#bdeb13", "#8aeb13"))
plt.show()

x2=[4,9,16,25,36]
fig2 = plt.figure(figsize =(9, 5)) # line 4
plt.pie(x2)
plt.show()
```

When embedding this cell as follows:

`{{{< embed plots.ipynb#fig-fruit >}}}`

The following output is produced:

{{< embed plots.ipynb#fig-fruit >}}

## Links to Source Notebooks {#linked-source-notebooks}

When you embed the contents of Notebooks in a Quarto document and render the document to HTML, Quarto will automatically include links to the source Notebooks that provided the embedded content. These links will by default appear both inline below the embedded content as well as below the TOC. For example, the following document embeds content from the notebook `plots.ipynb`. You can see the links in the rendered HTML document below:

![](images/nb-links.png){.border}

### Link Placement

You can control the placement of the links to source notebook by specifying the option `notebook-links`{spellcheck="false"} with one of the following values:

`false`{spellcheck="false"}

:   Do not display any links to source notebooks.

`inline`{spellcheck="false"}

:   Display only the inline links to source notebooks (which appear below the embedded content). Do not display links to the source document alongside the TOC.

`global`{spellcheck="false"}

:   Display only links to source notebooks alongside the TOC. Do not display links inline below the embedded content.

### Notebook Views

By default, Quarto will automatically generate an HTML rendering of the notebook which displays the contents of the notebook and includes a button to download the notebook. This makes it easier for users to view the Notebook contents without needing to download and run the Notebook locally. For example:

![](images/notebook-view.png){.border}

As an example, you can view the [live preview for the \`plots.ipynb\` notebook](/docs/prerelease/1.3/plots.ipynb.html) used in this document.

### View Options

You can control the behavior of notebook views using `notebook-view`. For each source notebook, you can provide a `title` and a `url`. The `title` will be used as the text of the any links to the source notebook and will also appear at the top of the rendered notebook view. The `url`, if provided, will be used as the `href` of any links to the source notebook. This is useful if you have deployed a copy of the source notebook to a site like Github, Google Colab, or Kaggle and would rather link to that instead.

For example:

``` {.markdown style="whitespace: pre-wrap;"}
notebook-view:
  - notebook: plots.ipynb
    title: "Plots and Computations"
    url: https://colab.research.google.com/drive/12GsIPQ644SI4vkEEHiZn-Qqfbr-bD1__
```

will result in links to the source notebook like so:

![](images/nb-links-updated.png){.border}

To disable the notebook views, and instead link directly to the Jupyter notebook (so the user may download the notebook with no intermediary view), set `notebook-view` to `false`.